#ifndef ERROR_H
#define ERROR_H

#include "error.h"
#include <stdio.h>
#include <stdlib.h>

typedef enum {
	IS_MACRO = 4,
	IS_INSTRUCTION = 3,
	IS_DIRECTIVE = 2,
	IS_LABEL = 1,
	NO_ERROR = 0,
	NO_PARAMETERS = -1,
	INVALID_FILE_NAME = -2,
	ERROR_MEMORY_ALLOC = -3,
	ERROR_PASS1 = -4,
	LINE_TOO_LONG = -5,
	LABEL_TOO_LONG = -6,
	INVALID_LABEL = -7,
	DUPLICATE_LABEL = -8,
	LINE_ERROR_FLAG = -9,
	PASS1_ERROR_FLAG = -10,
	INVALID_DIRECTIVE = -11,
	INVALID_INSTRUCTION = -12,
	RESERVED_WORD = -13,
	SYNTAX_ERROR = -14,
	INVALID_MACRO = -15,
	NOT_A_NUMBER = -16,
	MACRO_TOO_LONG = -17,
	MACRO_AFTER_LABEL = -18,
	INVALID_PARAMETERS = -19,
	DUPLICATE_MACRO = -20,
	INVALID_STRING = -21,
	INVALID_NUM_OF_PARAMS = -22,
	MACRO_PARAM_UNDEFINED = -23,
	INVALID_PARAMETER = -24,
	INVALID_ADDR_SRC_MODE = -25,
	INVALID_ADDR_DEST_MODE = -26,
	ERROR_OPEN_FILE = -27,
	ERROR_PASS2 = -28,
	ENTRY_UNDEFINED = -29,
	LABEL_UNDEF = -30,
	ERROR_CREATE_FILE = -31,
	NO_MACRO_PARAM = -32,
	EMPTY_LABEL = -33
} error_value;

void print_error(error_value, const char*, const int);

#endif
